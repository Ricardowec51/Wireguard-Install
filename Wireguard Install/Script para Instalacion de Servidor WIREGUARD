#!/bin/bash
set -euo pipefail

echo "Iniciando instalación y configuración de Wireguard..."

# Función para validar formato de IPv4
validar_ip() {
  local ip=$1
  if [[ ! $ip =~ ^([0-9]{1,3}\.){3}[0-9]{1,3}$ ]]; then
    return 1
  fi
  IFS='.' read -r o1 o2 o3 o4 <<< "$ip"
  for octeto in "$o1" "$o2" "$o3" "$o4"; do
    if (( octeto < 0 || octeto > 255 )); then
      return 1
    fi
  done
  return 0
}

# Obtener la IP pública por defecto
DEFAULT_IP=$(curl -s ifconfig.me)

echo -e "\n\n"
# Prompt bilingüe: "Ingrese la IP pública del servidor (Enter the server's public IP) [valor por defecto]:"
while true; do
  read -p "Ingrese la IP pública del servidor (Enter the server's public IP) [${DEFAULT_IP}]: " input
  WG_PUBLIC_IP="${input:-$DEFAULT_IP}"
  if validar_ip "$WG_PUBLIC_IP"; then
    break
  else
    echo "Formato de IP inválido. Ingrese una IP en formato x.x.x.x (each octet between 0 and 255)."
  fi
done

# Validación final adicional (por seguridad)
if ! validar_ip "$WG_PUBLIC_IP"; then
  echo "La IP ingresada '$WG_PUBLIC_IP' no es válida. / The entered IP '$WG_PUBLIC_IP' is invalid. Aborting."
  exit 1
fi

echo -e "\n\n"
# Prompt bilingüe: "Ingrese el puerto de escucha para Wireguard (Enter the Wireguard listen port) [51820]:"
read -p "Ingrese el puerto de escucha para Wireguard (Enter the Wireguard listen port) [51820]: " input_port
WG_LISTEN_PORT="${input_port:-51820}"

echo -e "\n\n"
# Prompt bilingüe: "Ingrese la interfaz de red para salida (NAT) (Enter the outgoing network interface for NAT) [eth0]:"
read -p "Ingrese la interfaz de red para salida (NAT) (Enter the outgoing network interface for NAT) [eth0]: " input_iface
WG_INTERFACE="${input_iface:-eth0}"

echo -e "\nUtilizando IP pública: $WG_PUBLIC_IP, puerto: $WG_LISTEN_PORT y salida en interfaz: $WG_INTERFACE\n\n"

# Actualizar el sistema e instalar los paquetes necesarios
apt update && apt upgrade -y
apt install -y wireguard iptables resolvconf qrencode

# Crear directorio de configuración y establecer permisos seguros
mkdir -p /etc/wireguard
chmod 700 /etc/wireguard
cd /etc/wireguard

# Generar claves del servidor con permisos restringidos
umask 077
wg genkey | tee server.key | wg pubkey > server.pub

# Leer las claves generadas
SERVER_PRIV_KEY=$(cat server.key)
SERVER_PUB_KEY=$(cat server.pub)

# Crear el archivo de configuración de Wireguard
cat <<EOF > /etc/wireguard/wg0.conf
[Interface]
Address = 10.0.0.1/24
ListenPort = $WG_LISTEN_PORT
PrivateKey = $SERVER_PRIV_KEY
# Se usa la interfaz indicada para las reglas NAT
PostUp = iptables -A FORWARD -i %i -j ACCEPT; iptables -t nat -A POSTROUTING -o $WG_INTERFACE -j MASQUERADE
PostDown = iptables -D FORWARD -i %i -j ACCEPT; iptables -t nat -D POSTROUTING -o $WG_INTERFACE -j MASQUERADE
EOF

# Habilitar e iniciar Wireguard
systemctl enable wg-quick@wg0
systemctl start wg-quick@wg0

echo "Instalación y configuración del servidor completada."
echo "La clave pública del servidor es: $SERVER_PUB_KEY"

# Guardar la información para el script de clientes
cat <<EOF > /etc/wireguard/server_info.conf
WG_PUBLIC_IP=$WG_PUBLIC_IP
WG_LISTEN_PORT=$WG_LISTEN_PORT
WG_INTERFACE=$WG_INTERFACE
SERVER_PUB_KEY=$SERVER_PUB_KEY
EOF

echo -e "\n---"
echo "Recordatorio / Reminder:"
echo "ES: Recuerda configurar tu router para redirigir el puerto de escucha ($WG_LISTEN_PORT) a la IP interna de tu servidor, asegurándote de que la IP pública ($WG_PUBLIC_IP) sea accesible desde Internet. Además, verifica las rutas y reglas del firewall para permitir el tráfico hacia tu servidor Wireguard."
echo "EN: Remember to configure your router to forward the listening port ($WG_LISTEN_PORT) to your server's internal IP and ensure that the public IP ($WG_PUBLIC_IP) is accessible from the Internet. Also, verify that routing and firewall rules allow traffic to your Wireguard server."
echo -e "---\n"
